# Auto-generated by SS360 Dev Agent
import re
from typing import Iterable, Dict, Iterator, List
from ss360.core.findings import Finding

NAME = "azure_sas"
SEVERITY = "high"

# Azure SAS token pattern - matches blob/container SAS URLs with required parameters
PATTERN = re.compile(
    r"https://[a-zA-Z0-9-]+\.blob\.core\.windows\.net/[^?\s]*\?[^?\s]*sv=[^&\s]*&[^?\s]*se=[^&\s]*&[^?\s]*sr=[^&\s]*&[^?\s]*sp=[^&\s]*&[^?\s]*sig=[A-Za-z0-9%+/=]*",
    re.IGNORECASE
)


def scan(blob: bytes, path: str) -> List[Finding]:
    """New detector interface using Finding objects."""
    text = blob.decode(errors="ignore")
    findings = []
    
    for line_num, line in enumerate(text.splitlines(), start=1):
        for match in PATTERN.finditer(line):
            url = match.group(0)
            
            # Redact the SAS URL - show the base URL but hide the SAS parameters
            base_url = url.split('?')[0] if '?' in url else url
            hint = f"{base_url}?[SAS-TOKEN-REDACTED]"
            
            # Extract expiry time for classification
            se_match = re.search(r'se=([^&\s]*)', url)
            expiry_info = f" (expires: {se_match.group(1)})" if se_match else ""
            
            findings.append(
                Finding.from_match(
                    rule=NAME,
                    path=path,
                    line=line_num,
                    match_hint=hint,
                    severity=SEVERITY,
                    reason=f"Azure Storage SAS token detected{expiry_info}",
                    meta={"sas_expiry": se_match.group(1) if se_match else None, "full_url": url}
                )
            )
    return findings


def detect(lines: Iterable[str]) -> Iterator[Dict[str, object]]:
    """
    Yield findings with line numbers when pattern matches.
    """
    for i, line in enumerate(lines, start=1):
        if PATTERN.search(line):
            yield {
                "id": "azure_sas",
                "title": "Azure Storage SAS",
                "severity": "high",
                "description": "Sensitive value detected",
                "line": i,
            }
