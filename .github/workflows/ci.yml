name: CI
on:
  pull_request:

jobs:
  lint_and_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # allow auto-commit to PR branch
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install black flake8 pytest pyyaml

      # ----- Auto-format & commit back if needed -----
      - name: Run Black (write)
        run: black .

      - name: Auto-commit formatting (if changed)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: format with Black"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # ----------------------------------------------

      - name: Flake8 (lint)
        run: flake8 .

      - name: SS360 scan
        run: python scripts/ci_scan.py --json-out findings.json --root .

      - name: Notify agents (always)
        if: always()
        env:
          WEBHOOK: ${{ secrets.AGENTS_WEBHOOK_URL }}
          TOKEN:   ${{ secrets.AGENTS_WEBHOOK_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${WEBHOOK:-}" ]; then
            status="${{ job.status }}"
            run_id="${{ github.run_id }}"
            job="${{ github.job }}"
            repo="${{ github.repository }}"
            branch="${{ github.head_ref || github.ref_name }}"
            pr="${{ github.event.pull_request.number || '' }}"
            cat > payload.json <<EOF
            {
              "event": "gha.status",
              "repo": "$repo",
              "job_id": "gha-$run_id",
              "finding_id": "gha-$run_id-$job",
              "file_path": ".github/workflows/ci.yml",
              "detector_id": "gha_status",
              "status": "$status",
              "branch": "$branch",
              "pr_number": "$pr"
            }
          EOF
            curl -sS -X POST "$WEBHOOK" \
              -H "Content-Type: application/json" \
              -H "X-Agent-Token: ${TOKEN:-}" \
              --data-binary @payload.json
          fi

      - name: Upload findings.json
        if: always() && hashFiles('findings.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: findings
          path: findings.json
